// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CME_api.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250124183742_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Distribution", b =>
                {
                    b.Property<int>("IdDistribution")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDistribution"));

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialMaterial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdDistribution");

                    b.HasIndex("SerialMaterial");

                    b.ToTable("Distributions");
                });

            modelBuilder.Entity("Materials", b =>
                {
                    b.Property<int>("IdMaterial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMaterial"));

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdMaterial");

                    b.HasIndex("IdUser");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("ProcessHistory", b =>
                {
                    b.Property<int>("IdProcess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProcess"));

                    b.Property<DateTime>("EntryData")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EnumStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IdDistribution")
                        .HasColumnType("integer");

                    b.Property<int?>("IdReceiving")
                        .HasColumnType("integer");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<string>("SerialMaterial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("WashingId")
                        .HasColumnType("integer");

                    b.HasKey("IdProcess");

                    b.ToTable("ProcessHistories");
                });

            modelBuilder.Entity("Receiving", b =>
                {
                    b.Property<int>("IdReceiving")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdReceiving"));

                    b.Property<DateTime>("EntryData")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<string>("SerialMaterial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdReceiving");

                    b.HasIndex("SerialMaterial")
                        .IsUnique();

                    b.ToTable("Receivings");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUser"));

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdGroup")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdGroup");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserGroup", b =>
                {
                    b.Property<int>("IdUserGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUserGroup"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdUserGroup");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("Washing", b =>
                {
                    b.Property<int>("IdWashing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdWashing"));

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<bool>("IsWashed")
                        .HasColumnType("boolean");

                    b.Property<string>("SerialMaterial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdWashing");

                    b.HasIndex("SerialMaterial");

                    b.ToTable("Washings");
                });

            modelBuilder.Entity("Materials", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("UserGroup", "UserGroup")
                        .WithMany("Users")
                        .HasForeignKey("IdGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Users_UserGroups_IdGroup");

                    b.Navigation("UserGroup");
                });

            modelBuilder.Entity("UserGroup", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
