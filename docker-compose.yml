version: '3'
services:
  Database:
    image: postgres:latest
    container_name: Database
    restart: always
    environment:
      POSTGRES_DB: cme_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: cme12345
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: >
      postgres -c listen_addresses='*' -c password_encryption=md5
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
    networks:
      - cme_network   

  Backend:
    image: backend-cme
    container_name: Backend
    build:
      context: ./Backend
      dockerfile: Dockerfile
      target: dev
    ports:
      - "8000:8000"
    environment:
      - DOTNET_USE_POLLING_FILE_WATCHER=1
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=Database;Port=5432;Database=cme_db;Username=postgres;Password=cme12345
      - ASPNETCORE_URLS=http://+:8000
    depends_on:
      Database:
        condition: service_healthy
    command: dotnet watch run --no-launch-profile --no-hot-restart
    volumes:
      - ./Backend/CME_api:/app
      - ~/.nuget/packages:/root/.nuget/packages
    networks:
      - cme_network

  Frontend:
    image: frontend-cme
    container_name: Frontend
    build:
      context: ./Frontend/cme_api
      dockerfile: ../Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - Backend
    networks:
      - cme_network
    volumes:
      - ./Frontend/cme_api:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WEBSOCKET_PORT=8080
        
volumes:
  postgres_data:
networks:
  cme_network:
    driver: bridge